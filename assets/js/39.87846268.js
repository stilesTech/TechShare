(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{567:function(a,t,s){"use strict";s.r(t);var n=s(10),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"liquibase简单介绍与使用"}},[a._v("Liquibase简单介绍与使用")]),a._v(" "),t("h2",{attrs:{id:"liquibase还是flyway"}},[a._v("Liquibase还是Flyway")]),a._v(" "),t("p",[a._v("Flyway和Liquibase都支持专业数据库重构和版本控制所需的所有功能，因此您将始终知道要处理的数据库模式的版本以及它是否与软件版本匹配。两种工具都集成在Maven或Gradle构建脚本中以及Spring Boot生态系统中，您可以完全自动化数据库重构。")]),a._v(" "),t("p",[a._v("Flyway使用SQL定义数据库更改，因此您可以定制SQL脚本，使其与基础数据库技术（例如Oracle或PostgreSQL）良好地配合使用。另一方面，使用Liquibase，您可以通过使用XML，YAML或JSON来定义数据库更改来引入抽象层。因此，Liquibase更适合在具有不同基础数据库技术的不同环境中安装的软件产品中使用。但是，如果您想完全控制SQL，Flyway是首选工具，因为您可以使用完全定制的SQL甚至Java代码来更改数据库。")]),a._v(" "),t("p",[a._v("多种数据源的情况下使用Liquibase会更加合适，不需要维护多种数据库脚本，和学习多种数据库语言，Liquibase对于大型项目更加友好。")]),a._v(" "),t("h2",{attrs:{id:"什么是liquibase"}},[a._v("什么是Liquibase")]),a._v(" "),t("p",[a._v("Liquibase是一个用于跟踪、管理和应用数据库变化的开源的数据库重构工具。它将所有数据库的变化（包括结构和数据）都保存在 changelog 文件中，便于版本控制，它的目标是提供一种数据库类型无关的解决方案，通过执行 schema 类型的文件来达到迁移。")]),a._v(" "),t("p",[a._v("官网："),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fdocs.liquibase.com%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("docs.liquibase.com/"),t("OutboundLink")],1),a._v(" "),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0f1605123da94acdb4a7a9a7b7907c1e~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"1617546202(1).jpg"}})]),a._v(" "),t("h2",{attrs:{id:"使用liquibase的数据库的ci-cd"}},[a._v("使用Liquibase的数据库的CI / CD")]),a._v(" "),t("p",[a._v("实施端到端CI / CD要求将所有代码（包括数据库代码）检入版本控制系统，并作为软件发布过程的一部分进行部署。Liquibase可以帮助您实现这一目标。\n您使用Liquibase进行的每个数据库架构更改都称为一个changeset。Liquibase使用changelogs跟踪所有变更集。Liquibase允许您创建一个触发器，该触发器通过指向更改日志文件来自动更新数据库。从这里，可以轻松地将流程集成到您的整个CI / CD流程中：")]),a._v(" "),t("p",[a._v("1.将变更集文件推送到要素存储库")]),a._v(" "),t("p",[a._v("2.针对Dev分支创建拉取请求")]),a._v(" "),t("p",[a._v("3.在同行评审和批准之后，将功能分支与开发分支合并")]),a._v(" "),t("p",[a._v("4.在Dev服务器上配置的CI / CD实现触发Liquibase进行数据库更新")]),a._v(" "),t("p",[a._v("5.Liquibase会自动执行任何新的变更日志文件（而且足以记住已经运行了哪些脚本）")]),a._v(" "),t("h2",{attrs:{id:"liquibase原理"}},[a._v("Liquibase原理")]),a._v(" "),t("p",[a._v("liquibase支持XML、YAML和JSON格式的迁移脚本。\n默认情况下，Bean会在/db/changelog（相对于Classpath根目录）里查找db.changelog-master.yaml文件。\nLiquibase变更集都集中在一个文件里。changeset命令后的那行有一个id属性，要对数据库进行后续变更。可以添加一个新的changeset，只要id不一样就行。此外，id属性也不一定是数字，可以包含任意内容。\n应用程序启动时，Liquibase会读取db.changelog-master.yaml里的变更集指令集，与之前写入databaseChangeLog表里的内容做对比，随后执行未运行过的变更集。")]),a._v(" "),t("h2",{attrs:{id:"liquibase-特性"}},[a._v("Liquibase 特性")]),a._v(" "),t("ul",[t("li",[a._v("支持几乎所有主流的数据库，如 MySQL, PostgreSQL, Oracle, Sql Server, DB2 等；")]),a._v(" "),t("li",[a._v("支持多开发者的协作维护；")]),a._v(" "),t("li",[a._v("日志文件支持多种格式，如 XML, YAML, JSON, SQL等；")]),a._v(" "),t("li",[a._v("支持上下文相关逻辑")]),a._v(" "),t("li",[a._v("生成数据库变更文档")]),a._v(" "),t("li",[a._v("支持多种运行方式，如命令行、Spring 集成、Maven 插件、Gradle 插件等。")])]),a._v(" "),t("h2",{attrs:{id:"springboot-整合-liquibase"}},[a._v("SpringBoot 整合 liquibase")]),a._v(" "),t("p",[t("strong",[a._v("一、引入依赖先在 pom 文件里引入依赖")])]),a._v(" "),t("div",{staticClass:"language-xml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("org.liquibase"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("liquibase-core"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[t("strong",[a._v("二、指定配置文件位置")])]),a._v(" "),t("p",[a._v("在代码中新建一个 LiquibaseConfig 类，用于配置 Liquibase，指定配置文件的位置。")]),a._v(" "),t("div",{staticClass:"language-kotlin extra-class"},[t("pre",{pre:!0,attrs:{class:"language-kotlin"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" javax"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("sql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("DataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("integration"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("spring"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SpringLiquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Bean"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Configuration"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation builtin"}},[a._v("@Configuration")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" LiquibaseConfig "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token annotation builtin"}},[a._v("@Bean")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" SpringLiquibase "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("liquibase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("DataSource dataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    SpringLiquibase liquibase "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" new "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("SpringLiquibase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setDataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("dataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//指定changelog的位置，这里使用的一个master文件引用其他文件的方式")]),a._v("\n    liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setChangeLog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"classpath:liquibase/master.xml"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setContexts")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string-literal singleline"}},[t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"development,test,production"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("setShouldRun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" liquibase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("三、编写配置文件")])]),a._v(" "),t("p",[a._v("目录结构：\n"),t("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4459593b38fd481ca7ccc76c13d61f45~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"liquibase.png"}}),a._v("\nsrc/main/resources 下新建一个文件夹：liquibase，用来存放跟 liquibase 相关的文件。\n然后在 liquibase 文件夹下新建 master.xml 作为主文件。")]),a._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[a._v("<databaseChangeLog\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xmlns")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[a._v("http://www.liquibase.org/xml/ns/dbchangelog")]),a._v('"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xmlns:xsi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[a._v("http://www.w3.org/2001/XMLSchema-instance")]),a._v('"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xsi:schemaLocation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"http://www.liquibase.org/xml/ns/dbchangelog')]),a._v('\n         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">\n\n    '),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<includeAll path")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"liquibase/changelogs/" relativeToChangelogFile="false"/>')]),a._v("\n\n</databaseChangeLog>\n")])])]),t("p",[a._v("includeAll 标签可以把一个文件夹下的所有 changelog 都加载进来。如果单个加载可以用 include。\nincludeAll 标签里有两个属性：path 和 relativeToChangelogFile。")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("Attribute")]),a._v(" "),t("th",[a._v("Description")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("file")]),a._v(" "),t("td",[a._v("指定要加载的文件或文件夹位置（在 include 标签里是 file）")])]),a._v(" "),t("tr",[t("td",[a._v("relativeToChangelogFile")]),a._v(" "),t("td",[a._v("文件位置的路径是否相对于 root changelog 是相对路径，默认 false，即相对于 classpath 是相对路径。")])])])]),a._v(" "),t("p",[t("strong",[a._v("四、编写配置文件 changelog 介绍")])]),a._v(" "),t("div",{staticClass:"language-ini extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<?xml version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"1.0" encoding="UTF-8"?>')]),a._v("\n<databaseChangeLog\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xmlns")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[a._v("http://www.liquibase.org/xml/ns/dbchangelog")]),a._v('"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xmlns:xsi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[a._v("http://www.w3.org/2001/XMLSchema-instance")]),a._v('"')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("xsi:schemaLocation")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"http://www.liquibase.org/xml/ns/dbchangelog')]),a._v('\n         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">\n\n    '),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<changeSet author")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"stiles" id="20210330-1" >')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<createTable tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department" remarks="部门表">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"id" type="int" autoIncrement="true" >')]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<constraints primaryKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"true" nullable="false"/>')]),a._v("\n            </column>\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"name" type="varchar(50)">')]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<constraints nullable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"false"/>')]),a._v("\n            </column>\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"active" type="boolean" defaultValueBoolean="true"/>')]),a._v("\n        </createTable>\n    </changeSet>\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<changeSet author")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"stiles" id="20210330-2" >')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<addColumn  tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"company"  type="VARCHAR(100)"></column>')]),a._v("\n        </addColumn>\n    </changeSet>\n    \n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<changeSet author")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"stiles"  id="20210330-3">')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<insert tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"id" valueNumeric="1"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"name" value="stiles_1"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"active" valueNumeric="1"/>')]),a._v("\n        </insert>\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<insert tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"id" valueNumeric="2"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"name" value="stiles_2"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"active" valueNumeric="1"/>')]),a._v("\n        </insert>\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<insert tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"id" valueNumeric="3"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"name" value="stiles_3"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"active" valueNumeric="0"/>')]),a._v("\n        </insert>\n    </changeSet>\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<changeSet author")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"stiles" id="20210330-4" >')]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<update tableName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"department">')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<column name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v('"name" value="stiles_33"/>')]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("<where>name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("'stiles_3'</where>")]),a._v("\n        </update>\n    </changeSet>\n</databaseChangeLog>\n")])])]),t("p",[a._v("SQL 格式的 changelogs 文件")]),a._v(" "),t("p",[a._v("变更集 changeset 是通过 author + id 的方式来保证唯一性")]),a._v(" "),t("p",[a._v("变更集提供以下属性：")]),a._v(" "),t("p",[a._v("stripComments:设置为 true 可在执行之前删除 SQL 中的任何注释, 否则为 false。如果未设置, 则默认值为 true")]),a._v(" "),t("p",[a._v("splitStatements:设置为false时，在“s”和“go”上不会使用Liquibase 拆分语句，默认为true。")]),a._v(" "),t("p",[a._v("endDelimiter:应用于语句结尾的分隔符。默认为“；”，也可以设置为“”")]),a._v(" "),t("p",[a._v("runAlways:在每次运行时执行变更集, 即使之前已运行")]),a._v(" "),t("p",[a._v("runOnChange:在首次看到更改并每次更改变更集时执行更改")]),a._v(" "),t("p",[a._v("context:如果在运行时传递了特定上下文, 则执行更改。任何字符串都可以用于上下文名称, 并且大小写不敏感。")]),a._v(" "),t("p",[a._v("logicalFilePath:用于在创建变更集的唯一标识符时重写文件名和路径。移动或重命名更改日志时所必需。")]),a._v(" "),t("p",[a._v("labels:标签是对变更集进行分类的通用方法集类似上下文, 但工作方式正好相反。如果不是在运行时定义一组上下文, 然后在变更集中定义一个匹配表达式, 而是在上下文中定义一组标签, 在运行时定义一个匹配表达式。")]),a._v(" "),t("p",[a._v("runInTransaction:变更集是否应作为单个事务运行 (如果可能)，默认值为 true。请注意此属性，如果设置为 false, 并且通过运行包含多个语句的变更集部分发生错误, 则 liquibase 数据库的 databasechangeloglock 表将处于无效状态")]),a._v(" "),t("p",[a._v("failOnError:如果在执行变更集时发生错误, 迁移是否应返回失败")]),a._v(" "),t("p",[a._v("dbms:要用于该变更集的数据库的类型。当迁移步骤运行时, 它将根据此属性检查数据库类型，如：oracle、mysql")]),a._v(" "),t("p",[a._v("logicalFilePath:在数据库 databasechangeloglock 中设置逻辑文件路径, 而不是在执行 liquibase 的 sql 物理文件位置。")]),a._v(" "),t("p",[t("strong",[a._v("五、Liquibase最佳实践")])]),a._v(" "),t("p",[a._v("changelog管理建议：")]),a._v(" "),t("p",[t("strong",[a._v("一个变更集只设置一次更改")])]),a._v(" "),t("p",[a._v("尽可能地避免对一个变更集进行多次更改，以避免自动提交 SQL 语句而可能使数据库处于非预期状态。 如 --changeset stiles:1 变更集，只新建一张 department 表，后面不再修改该变更集，如果需要变更，可以新增一条变更集。\n变更集的 ID\n选择适合您的方法。有的人是使用从 1 开始的序列号, 并且在更改日志中是唯一的，也有些人选择一个描述性的名称（例如：new-address-table）")]),a._v(" "),t("p",[t("strong",[a._v("总是考虑回滚")])]),a._v(" "),t("p",[a._v("尽量尝试以可以回滚的方式编写变更集，如 --changeset stiles:1 变更集新建一个 department 表，在后面跟上回滚的 SQL， --rollback drop table department;")]),a._v(" "),t("p",[t("strong",[a._v("为变更集添加注释")])]),a._v(" "),t("p",[a._v("尽量为每一个变更集条目增加注释")]),a._v(" "),t("p",[a._v("演示案例：\n"),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FstilesBoy%2Fliquibase_example",target:"_blank",rel:"noopener noreferrer"}},[a._v("github.com/stilesBoy/l…"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("参考资料：\n"),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fthorben-janssen.com%2Fliquibase-update-existing-database%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("thorben-janssen.com/liquibase-u…"),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fcenxuu%2Farticle%2Fdetails%2F86685662",target:"_blank",rel:"noopener noreferrer"}},[a._v("blog.csdn.net/cenxuu/arti…"),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fwww.it610.com%2Farticle%2F1176477856620949504.htm",target:"_blank",rel:"noopener noreferrer"}},[a._v("www.it610.com/article/117…"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);